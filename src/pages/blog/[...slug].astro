---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { formatDate } from '../../utils/date';
import { render } from 'astro:content';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await render(post);
const { title, description, pubDate, updatedDate, heroImage, heroVideo, heroAudio, tags = [], type = 'text' } = post.data;

// Wylicz przybliżony czas czytania (5 słów na sekundę, 300 słów na minutę)
const readingTime = Math.max(1, Math.ceil((post.body?.split(/\s+/)?.length || 0) / 300));

// Powiązane posty (na podstawie tagów)
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(p => p.id !== post.id) // Wykluczamy obecny post
  .filter(p => {
    const postTags = p.data.tags || [];
    // Sprawdzamy, czy post ma przynajmniej jeden wspólny tag
    return tags.some(tag => postTags.includes(tag));
  })
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3); // Limit do 3 postów
---

<!doctype html>
<html lang="pl">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      .post-header {
        margin-bottom: 2rem;
      }
      .post-content {
        margin-top: 2rem;
      }
      .hero-image {
        width: 100%;
        max-height: 400px;
        object-fit: cover;
        border-radius: 0.5rem;
      }
      .tag {
        margin-right: 0.5rem;
      }
      .update-date {
        font-style: italic;
      }
      .post-meta {
        display: flex;
        align-items: center;
        margin: 1rem 0;
        font-size: 0.875rem;
        color: var(--neutral-600);
      }
      .meta-item {
        display: flex;
        align-items: center;
        margin-right: 1.5rem;
      }
      .meta-item svg {
        margin-right: 0.5rem;
      }
      
      /* Komentarze */
      .comments-section {
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid var(--neutral-300);
      }
      
      /* Przyciski udostępniania */
      .share-buttons {
        display: flex;
        gap: 0.5rem;
        margin-top: 1rem;
      }
      .share-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 50%;
        color: white;
        transition: transform 0.2s;
      }
      .share-button:hover {
        transform: translateY(-3px);
      }
      .facebook {
        background-color: #1877f2;
      }
      .twitter {
        background-color: #1da1f2;
      }
      .linkedin {
        background-color: #0a66c2;
      }
      
      /* Powiązane posty */
      .related-posts {
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid var(--neutral-300);
      }
      .related-card {
        display: grid;
        grid-template-columns: 100px 1fr;
        gap: 1rem;
        padding: 1rem;
        border-radius: 0.5rem;
        transition: transform 0.2s;
      }
      .related-card:hover {
        transform: translateY(-3px);
      }
      .related-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 0.25rem;
      }
      .related-title {
        margin: 0 0 0.5rem;
        font-size: 1rem;
      }
      .related-date {
        font-size: 0.75rem;
        color: var(--neutral-500);
      }
    </style>
  </head>
  <body>
    <Header />
    <main class="container-narrow">
      <article class="post">
        <div class="post-header">
          <div class="flex flex-wrap gap-2 mb-3">
            {tags.map((tag) => (
              <a href={`/tag/${tag}`} class="tag">{tag}</a>
            ))}
          </div>
          <h1 class="text-3xl md:text-4xl font-bold">{title}</h1>
          
          <div class="post-meta">
            <div class="meta-item">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              <time datetime={pubDate.toISOString()}>{formatDate(pubDate)}</time>
            </div>
            
            <div class="meta-item">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span>{readingTime} min czytania</span>
            </div>
          </div>
          
          {updatedDate && (
            <div class="update-date">
              Ostatnia aktualizacja: <time datetime={updatedDate.toISOString()}>{formatDate(updatedDate)}</time>
            </div>
          )}
        </div>
        
        {heroImage && (
          <img src={heroImage} alt={title} class="hero-image" />
        )}
        
        {heroVideo && type === 'video' && (
          <div class="relative pb-[56.25%] overflow-hidden mb-8 rounded-lg">
            <iframe 
              src={heroVideo} 
              class="absolute top-0 left-0 w-full h-full" 
              frameBorder="0" 
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
              allowFullScreen
            ></iframe>
          </div>
        )}
        
        {heroAudio && type === 'audio' && (
          <div class="mb-8">
            <audio 
              class="w-full" 
              controls
              src={heroAudio}
            ></audio>
          </div>
        )}
        
        <div class="post-content prose dark:prose-invert max-w-none">
          <Content />
        </div>
        
        <div class="share-buttons">
          <a 
            href={`https://www.facebook.com/sharer/sharer.php?u=${Astro.url}`} 
            target="_blank"
            rel="noopener noreferrer"
            class="share-button facebook"
            aria-label="Udostępnij na Facebooku"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z" />
            </svg>
          </a>
          <a 
            href={`https://twitter.com/intent/tweet?url=${Astro.url}&text=${encodeURIComponent(title)}`} 
            target="_blank"
            rel="noopener noreferrer"
            class="share-button twitter"
            aria-label="Udostępnij na X (Twitter)"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z" />
            </svg>
          </a>
          <a 
            href={`https://www.linkedin.com/shareArticle?mini=true&url=${Astro.url}&title=${encodeURIComponent(title)}&summary=${encodeURIComponent(description)}`} 
            target="_blank"
            rel="noopener noreferrer"
            class="share-button linkedin"
            aria-label="Udostępnij na LinkedIn"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z" />
            </svg>
          </a>
        </div>
        
        <div class="comments-section">
          <h3 class="text-xl font-bold mb-4">Komentarze</h3>
          <!-- Tutaj później umieścimy Disqus lub inny system komentarzy -->
          <div class="bg-neutral-100 dark:bg-neutral-800 p-8 rounded-lg text-center">
            <p>System komentarzy wkrótce dostępny. Śledź nasze postępy!</p>
          </div>
        </div>
        
        {relatedPosts.length > 0 && (
          <div class="related-posts">
            <h3 class="text-xl font-bold mb-4">Powiązane artykuły</h3>
            <div class="grid gap-4 md:grid-cols-2">
              {relatedPosts.map((relatedPost) => (
                <a href={`/blog/${relatedPost.id}`} class="related-card post-card">
                  {relatedPost.data.heroImage ? (
                    <img src={relatedPost.data.heroImage} alt={relatedPost.data.title} class="related-image" />
                  ) : (
                    <div class="bg-gradient-to-r from-blue-500 to-indigo-600 related-image flex items-center justify-center">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" />
                      </svg>
                    </div>
                  )}
                  <div>
                    <h4 class="related-title">{relatedPost.data.title}</h4>
                    <time datetime={relatedPost.data.pubDate.toISOString()} class="related-date">
                      {formatDate(relatedPost.data.pubDate)}
                    </time>
                  </div>
                </a>
              ))}
            </div>
          </div>
        )}
      </article>
    </main>
    <Footer />
  </body>
</html>
